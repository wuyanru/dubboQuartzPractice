<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<!--声明项目描述符遵循哪一个POM模型版本。模型本身的版本很少改变，虽然如此，但它仍然是必不可少的，这是为了当Maven引入了新的特性或者其他模型变更的时候，确保稳定性。-->
	<modelVersion>4.0.0</modelVersion>
	<!--父项目的坐标。如果项目中没有规定某个元素的值，那么父项目中的对应值即为项目的默认值。 坐标包括group ID，artifact ID和 version。--> 
	<parent>
	    <!--被继承的父项目的全球唯一标识符--> 
		<groupId>test.wyr</groupId>
		 <!--被继承的父项目的构件标识符-->  
		<artifactId>templete.projects</artifactId>
		<!--被继承的父项目的版本-->  
		<version>0.0.1-gps</version>
		<!-- 父项目的pom.xml文件的相对路径。相对路径允许你选择一个不同的路径。默认值是../pom.xml。
		Maven首先在构建当前项目的地方寻找父项 目的pom，其次在文件系统的这个位置（relativePath位置），然后在本地仓库，最后在远程仓库寻找父项目的pom。-->
		<relativePath>../templete.projects/pom.xml</relativePath>
	</parent>
	<!-- 构件的标识符，它和group ID一起唯一标识一个构件。换句话说，你不能有两个不同的项目拥有同样的artifact ID和groupID；在某个 特定的group ID下，
	artifact ID也必须是唯一的。构件是项目产生的或使用的一个东西，Maven为项目产生的构件包括：JARs，源 码，二进制发布和WARs等。-->   
	<artifactId>templete.pds</artifactId>
	 <!--项目产生的构件类型，例如jar、war、ear、pom。插件可以创建他们自己的构件类型，所以前面列的不是全部构件类型-->  
	<packaging>war</packaging>
	<name>templete.pds Maven Webapp</name>
	 <!--项目主页的URL, Maven产生的文档用--> 
	<url>http://maven.apache.org</url>
	<!--SCM(Source Control Management)标签允许你配置你的代码库，供Maven web站点和其它插件使用。-->   
	<scm>
	    <!--SCM的URL,该URL描述了版本库和如何连接到版本库。欲知详情，请看SCMs提供的URL格式和列表。该连接只读。-->   
		<connection>scm:svn:http://172.1.1.1:18080/svn/project/templete/branches/sprint_templete_kayjet_gps_128.5_d1/templete.pds</connection>
		 <!--给开发者使用的，类似connection元素。即该连接不仅仅只读-->  
		<developerConnection>scm:svn:http://172.1.1.1:18080/svn/project/templete/branches/sprint_templete_kayjet_gps_128.5_d1/templete.pds</developerConnection>
		<!--指向项目的可浏览SCM库（例如ViewVC或者Fisheye）的URL。-->  
		<url>scm:svn:http://172.1.1.1:18080/svn/project/templete/branches/sprint_templete_kayjet_gps_128.5_d1/templete.pds</url>
	</scm>
	<!--项目引入插件所需要的额外依赖--> 
	<dependencies>
	 <!--参见dependencies/dependency元素-->  
		<dependency>
			<groupId>test.wyr</groupId>
			<artifactId>templete.pds.interfaces</artifactId>
			<version>0.0.1-gps</version>
		</dependency>
		<!-- tempo solution -->
		<!-- spring core -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${sprint-version}</version>
		</dependency>

		<!-- spring web, webmvc -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${sprint-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${sprint-version}</version>
		</dependency>

		<!-- json encoding -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>2.4.1</version>
		</dependency>

		<!-- spring redis -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-redis</artifactId>
			<version>1.5.0.RELEASE</version>
		</dependency>
		<dependency>
			<groupId>redis.clients</groupId>
			<artifactId>jedis</artifactId>
			<version>2.4.2</version>
		</dependency>
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>1.8.5</version>
		</dependency>
		<!-- spring jms -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jms</artifactId>
			<version>${sprint-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-broker</artifactId>
			<version>${activemq-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-pool</artifactId>
			<version>${activemq-version}</version>
		</dependency>

		<!-- spring jpa, jdbc, orm -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${sprint-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${sprint-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${sprint-version}</version>
		</dependency>

		<!-- hibernate -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-core</artifactId>
			<version>${hibernate-version}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>5.1.35</version>
		</dependency>

		<!-- Joda-Time -->
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<version>2.7</version>
		</dependency>

		<!-- mybatis, spring mybatis -->
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis</artifactId>
			<version>${mybatis-version}</version>
		</dependency>
		<dependency>
			<groupId>org.mybatis</groupId>
			<artifactId>mybatis-spring</artifactId>
			<version>1.3.0</version>
		</dependency>

		<!-- sprint test -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${sprint-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<version>2.0.0</version>
			<scope>test</scope>
		</dependency>

		<!-- temp solution -->
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>dubbo</artifactId>
			<version>${dubbo-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.zookeeper</groupId>
			<artifactId>zookeeper</artifactId>
			<version>${zookeeper-version}</version>
			  <!--当计算传递依赖时， 从依赖构件列表里，列出被排除的依赖构件集。即告诉maven你只依赖指定的项目，不依赖项目的依赖。此元素主要用于解决版本冲突问题-->  
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.github.sgroschupf</groupId>
			<artifactId>zkclient</artifactId>
			<version>${zkclient-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring</artifactId>
			<version>2.5.6.SEC03</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.jboss.netty</groupId>
			<artifactId>netty</artifactId>
			<version>3.1.0.ALPHA1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.netty</groupId>
			<artifactId>netty</artifactId>
			<version>3.7.0.Final</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>1.0.18</version>
		</dependency>
	</dependencies>
	<!--构建项目需要的信息-->  
	<build>
	   <!--使用的插件列表 。-->  
		<plugins>
			<!-- jetty 运行一个标准的war文件或者指定一个webapp目录-->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.2.10.v20150310</version>
				<configuration>
					<webApp>
						<contextPath>/${project.artifactId}</contextPath>
					</webApp>
					<httpConnector>
						<port>3020</port>
					</httpConnector>
					<stopPort>4020</stopPort>
					<stopKey>vcc</stopKey>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<properties>
						<property>
							<name>org.eclipse.jetty.util.log.DEBUG</name>
							<value>true</value>
						</property>
					</properties>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.springframework</groupId>
						<artifactId>spring</artifactId>
						<version>2.5.6.SEC03</version>
					</dependency>
					<dependency>
						<groupId>org.jboss.netty</groupId>
						<artifactId>netty</artifactId>
						<version>3.2.5.Final</version>
					</dependency>
					<dependency>
						<groupId>io.netty</groupId>
						<artifactId>netty</artifactId>
						<version>3.7.0.Final</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.tomcat.maven</groupId>
				<artifactId>tomcat7-maven-plugin</artifactId>
				<configuration>
					<url>${p.pds.tomcat.url}</url>
					<username>${p.pds.tomcat.username}</username>
					<password>${p.pds.tomcat.password}</password>
					<path>/${project.artifactId}</path>
					<port>3020</port>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.springframework</groupId>
						<artifactId>spring</artifactId>
						<version>2.5.6.SEC03</version>
					</dependency>
					<dependency>
						<groupId>org.jboss.netty</groupId>
						<artifactId>netty</artifactId>
						<version>3.2.5.Final</version>
					</dependency>
					<dependency>
						<groupId>io.netty</groupId>
						<artifactId>netty</artifactId>
						<version>3.7.0.Final</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<configuration>
					<archive>
						<addMavenDescriptor>false</addMavenDescriptor>
					</archive>
					<webResources>
						<resource>
							this is relative to the pom.xml directory
							<directory>src/main/resources/${p.pds.package.environment}</directory>
							<targetPath>WEB-INF/classes</targetPath>
							<filtering>true</filtering>
						</resource>
					</webResources>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.mybatis.maven</groupId>
				<artifactId>migrations-maven-plugin</artifactId>
				<version>1.1.2</version>
				<configuration>
					<repository> ${basedir}/target/classes/db </repository>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>5.1.35</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.mybatis.generator</groupId>
				<artifactId>mybatis-generator-maven-plugin</artifactId>
				<version>1.3.0</version>
				<configuration>
					<configurationFile>src/main/resources/db/generatorConfig.xml</configurationFile>
					<outputDirectory>${basedir}/target</outputDirectory>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>5.1.35</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>sql-maven-plugin</artifactId>
				<version>1.5</version>
				<configuration>
					<driver>com.mysql.jdbc.Driver</driver>
					<url>${p.pds.jdbc.url}</url>
					<username>${p.pds.jdbc.username}</username>
					<password>${p.pds.jdbc.password}</password>
					<srcFiles>
						<srcFile>src/test/resources/dbscripts/init_pds_database_data.sql</srcFile>
					</srcFiles>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>mysql</groupId>
						<artifactId>mysql-connector-java</artifactId>
						<version>5.1.35</version>
					</dependency>
				</dependencies>
			</plugin>
		</plugins>
		<finalName>${project.artifactId}-${p.pds.package.environment}-${project.version}</finalName>
	</build>
	<!--在列的项目构建profile，如果被激活，会修改构建处理--> 
	<profiles>
	  
		<profile>
			<id>local</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<p.pds.package.environment>local</p.pds.package.environment>
				<p.pds.jdbc.url>jdbc:mysql://172.16.128.5:3306/templete_pds?useUnicode=true&amp;characterEncoding=UTF-8</p.pds.jdbc.url>
				<p.pds.jdbc.username>root</p.pds.jdbc.username>
				<p.pds.jdbc.password>fourthbutton</p.pds.jdbc.password>
				<p.pds.tomcat.username>adminscript</p.pds.tomcat.username>
				<p.pds.tomcat.password>admin</p.pds.tomcat.password>
				<p.pds.tomcat.url>http://172.16.8.5:8080/manager/text</p.pds.tomcat.url>
				<p.pds.activemq.url>tcp://172.16.8.5:8161</p.pds.activemq.url>
				<p.pds.redis.host>172.16.8.5</p.pds.redis.host>
				<p.pds.redis.port>6379</p.pds.redis.port>
				<p.pds.zookeeper.address>zookeeper://172.16.128.5:2181</p.pds.zookeeper.address>
				<p.pds.zookeeper.service.port>20880</p.pds.zookeeper.service.port>
				<p.pds.logback.log.level>debug</p.pds.logback.log.level>
			</properties>
		</profile>
		<!--根据环境参数或命令行参数激活某个构建处理  tomcat启动的时候会用到-->  
		<profile>
		    <!--构建配置的唯一标识符。即用于命令行激活，也用于在继承时合并具有相同标识符的profile。-->  
			<id>10.1.11.43-8080</id>
			<!--项目开发者属性，如即时消息如何处理等-->  
			<properties>
				<p.pds.package.environment>10.1.11.43-8080</p.pds.package.environment>
				<p.pds.jdbc.url>jdbc:mysql://10.1.7.65:3306/templete_pds_new?useUnicode=true&amp;characterEncoding=UTF-8</p.pds.jdbc.url>
				<p.pds.jdbc.username>root</p.pds.jdbc.username>
				<p.pds.jdbc.password>123456</p.pds.jdbc.password>
				<p.pds.tomcat.username>adminscript</p.pds.tomcat.username>
				<p.pds.tomcat.password>admin</p.pds.tomcat.password>
				<p.pds.tomcat.url>http://172.16.8.5:8080/manager/text</p.pds.tomcat.url>
				<p.pds.activemq.url>tcp://172.16.8.5:8161</p.pds.activemq.url>
				<p.pds.redis.host>10.1.11.43</p.pds.redis.host>
				<p.pds.redis.port>6379</p.pds.redis.port>
				<p.pds.zookeeper.address>zookeeper://10.1.11.42:2181</p.pds.zookeeper.address>
				<p.pds.zookeeper.service.port>20880</p.pds.zookeeper.service.port>
				<p.pds.logback.log.level>debug</p.pds.logback.log.level>
			</properties>
		</profile>
		<profile>
			<id>alidev.jenkins</id>
		</profile>
	</profiles>
</project>
